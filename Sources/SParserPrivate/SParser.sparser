imports
  Foundation
  SParserLibs
syntax
  type
    Syntax
  ::= importRule rules
    return Syntax(imports: importRule, rules: rules)
  ::= rules
    return Syntax(imports: [], rules: rules)
importRule
  type
    [String]
  ::= "imports\n" indent imports dedent
    return imports
imports
  type
    [String]
  ::= importFramework imports
    return [importFramework] + imports
  ::=
    return []
importFramework
  type
    String
  ::= line
    return line
rules
  type
    [Rule]
  ::= rules rule
    return rules + [rule]
  ::=
    return []
rule
  type
    Rule
  ::= name "\n" indent type patterns dedent
    return Rule(name: name, type: type, patterns: patterns)
type
  type
    String
  ::= "type\n" indent line dedent
    return line
patterns
  type
    [Pattern]
  ::= patterns pattern
    return patterns + [Pattern(terms: pattern.terms, evaluator: pattern.evaluator, id: patterns.count)]
  ::=
    return []
pattern
  type
    Pattern
  ::= "::=" cws terms "\n" multiLineString
    return Pattern(terms: terms, evaluator: multiLineString, id: 0)
terms
  type
    [Term]
  ::= term cws terms
    return [term] + terms
  ::=
    return []
term
  type
    Term
  ::= "indent"
    return .indent
  ::= "dedent"
    return .dedent
  ::= name 
    return .type(name: nil, type: name)
  ::= name ":" name
    return .type(name: name, type: name1)
  ::= quotedString
    return .quoted(quotedString)
name
  type
    String
  ::= letter letterDigits
    return String(letter) + letterDigits

